{"version":3,"sources":["components/Filter.js","context/createDataContext.js","constants/api_url.js","api/index.js","context/weatherContext.js","components/WeatherIcons.js","components/WeatherState.js","components/HumidityWind.js","components/WeatherSummary.js","components/Graph.js","components/WeatherDetailItem.js","components/Details.js","App.js","reportWebVitals.js","index.js"],"names":["Filter","props","onFinish","className","name","Item","label","createDataContext","reducer","actions","defaultValue","Context","React","createContext","Provider","children","useReducer","state","dispatch","boundActions","key","value","api_key","options","baseURL","instance","axios","create","action","type","data","payload","forecast","getWeatherData","place","a","console","log","uri","location","latitude","longitude","weatherApi","method","url","response","getForecast","WeatherIcons","WeatherState","HumidityWind","humidity","wind","WeatherSummary","weather","main","speed","Graph","list","chartRef","useRef","useState","labels","filter","reading","dt_txt","includes","map","item","push","temp","classes","graphContainer","id","ref","WeatherDetailItem","DetailsForecast","index","date","moment","unix","dt","format","App","contextValue","useContext","WeatherContext","usePosition","useEffect","setTimeout","lg","md","xs","values","Object","keys","length","style","padding","minHeight","Details","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95f6ad02.chunk.js","sourcesContent":["import { Form, Input } from \"antd\";\n\nconst Filter = (props) => {\n  const { onFinish } = props;\n  return (\n    <div className=\"filter\">\n      <Form name=\"filter-location\" onFinish={onFinish}>\n        <Form.Item name=\"location\" label=\"Your city\">\n          <Input />\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React, { useReducer } from \"react\";\n\nconst createDataContext = (reducer, actions, defaultValue) => {\n  const Context = React.createContext();\n\n  const Provider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, defaultValue);\n\n    const boundActions = {};\n    for (let key in actions) {\n      boundActions[key] = actions[key](dispatch);\n    }\n\n    return (\n      <Context.Provider value={{ state, ...boundActions }}>\n        {children}\n      </Context.Provider>\n    );\n  };\n\n  return { Context, Provider };\n};\n\nexport default createDataContext;\n","// export const api_key = \"b829551248311c33c67e8704b2c80a98\";\nexport const api_key = \"cef69f28e286b68b16035e062134d14c\";\nexport const url_base_weather = \"https://api.openweathermap.org/data/2.5/\";\n","import axios from 'axios';\nimport {url_base_weather} from \"../constants/api_url\";\n\nconst options = {\n    baseURL: url_base_weather,\n};\nconst instance = axios.create(options);\n\n// instance.interceptors.request.use(\n//     config => {\n//         const token = api_key\n//         if (token) {\n//             config.headers.Authorization = `Bearer ${token}`;\n//         }\n//         return config;\n//     }\n// );\n\nexport default instance;","import createDataContext from \"./createDataContext\";\nimport weatherApi from \"../api/\";\nimport { api_key } from \"../constants/api_url\";\n\nconst weatherReducer = (state, action) => {\n  switch (action.type) {\n    case \"set_weather\":\n      return { ...state, data: action.payload };\n    case \"set_forecast\":\n      return { ...state, forecast: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst getWeatherData = (dispatch) => async (place) => {\n  console.log(\"place\", place);\n  let uri = \"\";\n  if (place.location) {\n    uri = `weather?q=${place.location}`;\n  } else if (place.latitude && place.longitude) {\n    uri = `weather?lat=${place.latitude}&lon=${place.longitude}`;\n  }\n\n  const response = await weatherApi({\n    method: \"get\",\n    url: `${uri}&appid=${api_key}`,\n  });\n\n  dispatch({ type: \"set_weather\", payload: response.data });\n};\n\nconst getForecast = (dispatch) => async (place) => {\n  console.log(\"place:\", place);\n  let uri = \"\";\n  if (place.location) {\n    uri = `forecast?q=${place.location}`;\n  } else if (place.latitude && place.longitude) {\n    uri = `forecast?lat=${place.latitude}&lon=${place.longitude}`;\n  }\n\n  const response = await weatherApi({\n    method: \"get\",\n    url: `${uri}&appid=${api_key}`,\n  });\n  dispatch({ type: \"set_forecast\", payload: response.data });\n};\n\nexport const { Provider, Context } = createDataContext(\n  weatherReducer,\n  { getWeatherData, getForecast },\n  { data: {}, forecast: {} }\n);\n","import {\n  WiDayThunderstorm,\n  WiRainWind,\n  WiDaySunny,\n  WiDayShowers,\n  WiDaySnowWind,\n  WiDayFog,\n  WiSmoke,\n  WiCloudy,\n} from \"react-icons/wi\";\n\nconst WeatherIcons = ({ name }) => {\n  switch (name) {\n    case \"Thunderstorm\":\n      return <WiDayThunderstorm />;\n    case \"Drizzle\":\n      return <WiDayShowers />;\n    case \"Snow\":\n      return <WiDaySnowWind />;\n    case \"Mist\":\n    case \"Fog\":\n      return <WiDayFog />;\n    case \"Smoke\":\n      return <WiSmoke />;\n    case \"Rain\":\n    case \"Haze\":\n    case \"Dust\":\n    case \"Sand\":\n    case \"Ash\":\n    case \"Squall\":\n    case \"Tornado\":\n      return <WiRainWind />;\n    case \"Clouds\":\n      return <WiCloudy />;\n    default:\n      return <WiDaySunny />;\n  }\n};\n\nexport default WeatherIcons;\n","import { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nconst WeatherState = (props) => {\n  const { name, value, className } = props;\n  return (\n    <Fragment>\n      <p>{name}</p>\n      <span className={className}>{value}</span>\n    </Fragment>\n  );\n};\n\nWeatherState.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  className: PropTypes.string,\n};\n\nexport default WeatherState;\n","import PropTypes from \"prop-types\";\nimport WeatherState from \"./WeatherState\";\n\nconst HumidityWind = (props) => {\n  const { humidity, wind } = props;\n  return (\n    <div className=\"humidity-wind\">\n      <div className=\"humidity\">\n        <WeatherState\n          name=\"Humidity\"\n          value={`${humidity} %`}\n          className=\"humidity-percent\"\n        />\n      </div>\n      <div className=\"wind\">\n        <WeatherState\n          name=\"Wind speed\"\n          value={`${wind} km/h`}\n          className=\"wind-speed\"\n        />\n      </div>\n    </div>\n  );\n};\n\nHumidityWind.propTypes = {\n  humidity: PropTypes.number.isRequired,\n  wind: PropTypes.number.isRequired,\n};\n\nexport default HumidityWind;\n","import { Fragment } from \"react\";\nimport WeatherIcons from \"../components/WeatherIcons\";\nimport HumidityWind from \"./HumidityWind\";\nimport PropTypes from \"prop-types\";\n\nconst WeatherSummary = (props) => {\n  const { weather, main, wind } = props;\n  const name = weather[0] ? weather[0].main : \"Clear\";\n  return (\n    <Fragment>\n      <div className=\"weatherCont\">\n        <WeatherIcons name={name} />\n        <p>{name}</p>\n      </div>\n      <HumidityWind humidity={main.humidity} wind={wind.speed} />\n    </Fragment>\n  );\n};\n\nWeatherSummary.propTypes = {\n  weather: PropTypes.array.isRequired,\n  main: PropTypes.object.isRequired,\n  wind: PropTypes.object.isRequired,\n};\n\nexport default WeatherSummary;\n","import { useRef, useEffect, useState } from \"react\";\nimport Chartjs from \"chart.js\";\nimport PropTypes from \"prop-types\";\nimport classes from \"./lineChart.css\";\n\nconst Graph = ({ list }) => {\n  const chartRef = useRef(null);\n  const [, setChartInstance] = useState(null);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const chartData = {\n    type: \"line\",\n  };\n\n  let labels = [];\n  let data = [];\n\n  list\n    .filter((reading) => reading.dt_txt.includes(\"18:00:00\"))\n    .map((item) => {\n      labels.push(item.main.temp);\n      data.push(item.main.temp);\n      return 0;\n    });\n\n  chartData.data = {\n    labels: labels,\n    datasets: [\n      {\n        label: \"Temp\",\n        data: data,\n      },\n    ],\n  };\n\n  // useEffect(() => {\n  //     if (chartRef && chartRef.current) {\n  //         const newChartInstance = new Chartjs(chartRef.current, chartData);\n  //         setChartInstance(newChartInstance);\n  //     }\n  // }, [chartData, chartRef]);\n\n  return (\n    <div className={classes.graphContainer}>\n      <canvas id=\"my-chart\" ref={chartRef} />\n    </div>\n  );\n};\n\nGraph.propTypes = {\n  list: PropTypes.array.isRequired,\n};\n\nexport default Graph;\n","import PropTypes from \"prop-types\";\nimport WeatherIcons from \"./WeatherIcons\";\nimport WeatherState from \"./WeatherState\";\n\nconst WeatherDetailItem = (props) => {\n  const { weather, main } = props;\n  const { humidity } = main;\n  const name = weather[0] ? weather[0].main : \"Clear\";\n  return (\n    <div>\n      <div className=\"weatherItem\">\n        <WeatherIcons name={name} />\n        <p>{name}</p>\n        <div className=\"humidity\">\n          <WeatherState\n            name=\"Humidity\"\n            value={`${humidity} %`}\n            className=\"humidity-percent\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nWeatherDetailItem.propTypes = {\n  weather: PropTypes.array.isRequired,\n  main: PropTypes.object.isRequired,\n};\nexport default WeatherDetailItem;\n","import PropTypes from \"prop-types\";\nimport WeatherDetailItem from \"./WeatherDetailItem\";\nimport moment from \"moment\";\n\nconst DetailsForecast = ({ list }) => {\n  return (\n    <div className=\"forecast\">\n      {list\n        .filter((reading) => reading.dt_txt.includes(\"18:00:00\"))\n        .map((item, index) => {\n          let date = moment.unix(item.dt).format(\"MMMM Do YYYY\");\n          if (index === 0) {\n            date = \"Today\";\n          }\n          return (\n            <div className=\"forecast-daily\" key={item.dt}>\n              {date}\n              <WeatherDetailItem main={item.main} weather={item.weather} />\n            </div>\n          );\n        })}\n    </div>\n  );\n};\n\nDetailsForecast.propTypes = {\n  list: PropTypes.array.isRequired,\n};\n\nexport default DetailsForecast;\n","import { useContext, useState, useEffect } from \"react\";\nimport { Layout, Col, Row } from \"antd\";\nimport \"./App.css\";\nimport Filter from \"./components/Filter\";\nimport { Context as WeatherContext } from \"./context/weatherContext\";\nimport WeatherSummary from \"./components/WeatherSummary\";\nimport Graph from \"./components/Graph\";\nimport DetailsForecast from \"./components/Details\";\nimport { usePosition } from \"use-position\";\n\nconst App = () => {\n  const contextValue = useContext(WeatherContext);\n  const { state, getWeatherData, getForecast } = contextValue;\n\n  const watch = true;\n\n  const { latitude, longitude } = usePosition(watch);\n\n  useEffect(() => {\n    if (latitude && longitude) {\n      const place = {\n        latitude,\n        longitude,\n      };\n      getWeatherData(place);\n      setTimeout(() => {\n        getForecast(place);\n      }, 900);\n    }\n  }, [latitude, longitude]);\n\n  const onFinish = (values) => {\n    getWeatherData(values);\n    setTimeout(() => {\n      getForecast(values);\n    }, 900);\n  };\n\n  return (\n    <Layout>\n      <Row>\n        <Col lg={6} md={6} xs={24}>\n          <Filter onFinish={onFinish} />\n          {Object.keys(state.data).length > 0 ? (\n            <WeatherSummary\n              weather={state.data.weather}\n              wind={state.data.wind}\n              main={state.data.main}\n            />\n          ) : null}\n        </Col>\n        <Col lg={18} md={18} xs={24}>\n          {/*<Content className=\"site-layout\" style={{padding: '0 50px', marginTop: 64}}>*/}\n          <div\n            className=\"site-layout-background\"\n            style={{ padding: 24, minHeight: 380 }}\n          >\n            {Object.keys(state.forecast).length > 0 ? (\n              <>\n                <Graph list={state.forecast.list} />\n                <DetailsForecast list={state.forecast.list} />\n              </>\n            ) : null}\n          </div>\n          {/*</Content>*/}\n        </Col>\n      </Row>\n    </Layout>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider as WeatherProvider} from './context/weatherContext'\n\nReactDOM.render(\n  <React.StrictMode>\n      <WeatherProvider>\n          <App />\n      </WeatherProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}